@model AplikacjaQuizowa.Models.ChangeUserModelView

@{
    ViewBag.Title = "Edycja użytkownika";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	@Html.HiddenFor(model => model.Id)

	<div class="form-group">
		@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
		<div class="col-md-8 col-sm-7">
			@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
		<div class="col-md-8 col-sm-7">
			@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
		</div>
	</div>


	<div class="form-group">
		@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2 col-sm-3" })
		<div class="col-md-8 col-sm-7">
			@for (int i = 0; i < Model.Roles.Count(); i++)
			{
				@Html.EditorFor(m => Model.Roles[i].Checked)
				@Html.DisplayFor(m => Model.Roles[i].RoleName)
				@Html.HiddenFor(m => Model.Roles[i].RoleName)
				@Html.HiddenFor(m => Model.Roles[i].RoleId)
			}
		</div>
	</div>


	<div class="form-group">
		<div class="col-md-offset-2 col-md-10 col-sm-offset-3 col-sm-10">
			<input type="submit" value="Zmień" class="btn btn-default" />
		</div>
	</div>
</div>
}


<div>
    @Html.ActionLink("Wróć do listy", "Index")
</div>

<script>
	$("#myDIV").addClass("col-xs-12 col-sm-10 col-md-10 col-sm-offset-1 col-md-offset-1");
</script>